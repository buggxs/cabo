// Mocks generated by Mockito 5.4.0 from annotations
// in cabo/test/components/statistics/cubit/statistics_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cabo/core/app_navigator/navigation_service.dart' as _i8;
import 'package:cabo/domain/player/data/player.dart' as _i7;
import 'package:cabo/domain/rule_set/data/rule_set.dart' as _i2;
import 'package:cabo/domain/rule_set/rules_service.dart' as _i4;
import 'package:cabo/misc/utils/dialogs.dart' as _i5;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRuleSet_0 extends _i1.SmartFake implements _i2.RuleSet {
  _FakeRuleSet_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_1<T extends _i3.State<_i3.StatefulWidget>>
    extends _i1.SmartFake implements _i3.GlobalKey<T> {
  _FakeGlobalKey_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalRuleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalRuleService extends _i1.Mock implements _i4.LocalRuleService {
  @override
  _i2.RuleSet loadRuleSet({bool? useOwnRules = false}) => (super.noSuchMethod(
        Invocation.method(
          #loadRuleSet,
          [],
          {#useOwnRules: useOwnRules},
        ),
        returnValue: _FakeRuleSet_0(
          this,
          Invocation.method(
            #loadRuleSet,
            [],
            {#useOwnRules: useOwnRules},
          ),
        ),
        returnValueForMissingStub: _FakeRuleSet_0(
          this,
          Invocation.method(
            #loadRuleSet,
            [],
            {#useOwnRules: useOwnRules},
          ),
        ),
      ) as _i2.RuleSet);
}

/// A class which mocks [StatisticsDialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStatisticsDialogService extends _i1.Mock
    implements _i5.StatisticsDialogService {
  @override
  _i6.Future<Map<String, int?>?> showPointDialog(List<_i7.Player>? players) =>
      (super.noSuchMethod(
        Invocation.method(
          #showPointDialog,
          [players],
        ),
        returnValue: _i6.Future<Map<String, int?>?>.value(),
        returnValueForMissingStub: _i6.Future<Map<String, int?>?>.value(),
      ) as _i6.Future<Map<String, int?>?>);

  @override
  _i6.Future<bool?> showEndGame(_i3.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #showEndGame,
          [context],
        ),
        returnValue: _i6.Future<bool?>.value(),
        returnValueForMissingStub: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);

  @override
  _i6.Future<_i7.Player?> showRoundCloserDialog({List<_i7.Player>? players}) =>
      (super.noSuchMethod(
        Invocation.method(
          #showRoundCloserDialog,
          [],
          {#players: players},
        ),
        returnValue: _i6.Future<_i7.Player?>.value(),
        returnValueForMissingStub: _i6.Future<_i7.Player?>.value(),
      ) as _i6.Future<_i7.Player?>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i8.NavigationService {
  @override
  _i3.GlobalKey<_i3.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_1<_i3.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_1<_i3.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i3.GlobalKey<_i3.NavigatorState>);

  @override
  _i6.Future<T?> showAppDialog<T>(
          {required _i3.Dialog Function(_i3.BuildContext)? dialog}) =>
      (super.noSuchMethod(
        Invocation.method(
          #showAppDialog,
          [],
          {#dialog: dialog},
        ),
        returnValue: _i6.Future<T?>.value(),
        returnValueForMissingStub: _i6.Future<T?>.value(),
      ) as _i6.Future<T?>);
}
